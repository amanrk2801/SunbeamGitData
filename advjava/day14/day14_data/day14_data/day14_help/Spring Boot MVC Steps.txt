Development steps (CRUD for restaurants)

1. Render index page.
Link - For List restaurants
URL - http://host:port/ctx_path/
Method - GET
Payload - none
Resp - render index page with a link to list restaurants

	
2. After clicking on the link (to list restaurants)
 
Task  – Render List of restaurants
URL - http://host:port/ctx_path/restaurants/list
Method - GET
Payload - none
Resp - render restaurant list (list.jsp)

3. Render Update n Delete Links | Button in list.jsp
Hint - Use <c:url>  tags

4. Description –Soft Delete Specific restaurant
(why soft delete ?)
After clicking on the "Delete" link
URL - http://host:post/ctx_path/restaurants/delete?id=...
Method - GET
Payload - request param - restaurantId
Action - soft delete restaurant details 

How to bind incoming request parameter to method argument of req handling method ?
- @RequestParam
- SC reads request param n parses it n binds it to method argument
- example of D.I


In case of any changes in DB state , use redirect instead of forward
 - otherwise view layer(eg - list.jsp) will not be refreshed

How ? 
 Simply replace LVN (forward view name) by redirect location
 - using redirect keyword
 eg - return "redirect:/restaurants/list";

To remember the details(results) till the next redirect request 
 - use flash scope

How to add attributes under flash scope ?
 - Use o.s.ui.RedirectAttributes - interface

Q. What is RedirectAttributes ?
- sub interface of Model
- use case
 - in redirect scenario

- how to use it ?
Add RedirectAttributes as the dependency in the method argument list.
API of RedirectAttributes
public RedirectAttributes addFlashAttrbute(String name,Object value)
 - scope of the attribute will be available till next redirect request.

Resp - redirect resp , redirect location - /restaurants/list
(Why redirect n not forward?)

5. Description –Update Specific restaurant details
5.1 - show update form

After clicking on the "Update" link
URL - http://host:post/ctx_path/restaurants/update?id=...
Method - GET
Payload - request param - restaurantId
Action - Render Update form (pre populated)
restaurant id - readonly
Resp - Render restaurant details update form to the client

@ModelAttribute 
 - annotation added on method argument or on the method level.
 use case - for data binding request body -> Entity

6. After submitting form, to the same URL (default action)
URL - http://host:post/ctx_path/restaurants/update?id=..
Method - POST
Payload - form data 
Action - Process Update form n update restaurant details in DB
Resp -redirect resp , redirect location - /restaurants/list



7. Description –Add new restaurant
After clicking on the "Add new restaurant" button/link
URL - http://host:post/ctx_path/restaurants/add_form
Method - GET
Payload - none
Action - Render Add Restaurant form (form fields - restaurant's basic details)
Resp - Render add restaurant form

Instead of binding individual request parameter to method argument , using @RequestParam 
 - SC can automatically bind multiple req params to model (eg - Restaurant)

Dev steps 
1. In show form phase 
 - simply add model (eg - Restaurant) under model Map
 - render view

2. In process form phase 
 - bind incoming request params(form fields) to  server side model object
 - Use in JSP
  - Spring supplied form tag library
 - For data binding use method arg level annotation
 @ModelAttribute.


8. After submitting form, to the same URL (default action)
URL - http://host:post/ctx_path/restaurants/add_form
Method - POST
Payload - form data
Action - Process add restaurant form n insert restaurant details in DB
Resp -redirect resp , redirect location - /restaurants/list